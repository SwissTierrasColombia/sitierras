---

---

<div id="carousel" class="relative w-full">
  <!-- Carousel wrapper -->
  <div class="relative overflow-hidden h-48 md:h-[400px] lg:h-[550px]">
    <slot name="title" />
    <!-- Item 1 -->
    <div id="carousel-item-1" class="hidden duration-1000 ease-in-out">
      <video class="carousel-video w-full" muted preload="auto" playsinline>
        <source
          src="/wonderful-rivers-and-landscapes-of-colombia-2022-11-10-00-59-45-utc.mp4"
          type="video/mp4"
        />
      </video>
    </div>
    <!-- Item 2 -->
    <div id="carousel-item-2" class="hidden duration-1000 ease-in-out">
      <video class="carousel-video w-full" muted preload="auto" playsinline>
        <source
          src="/aerial-shot-of-the-landscape-in-huila-colombia-2023-01-15-21-48-16-utc.mp4"
          type="video/mp4"
        />
      </video>
    </div>
    <!-- Item 3 -->
    <div id="carousel-item-3" class="hidden duration-1000 ease-in-out">
      <video class="carousel-video w-full" muted preload="auto" playsinline>
        <source
          src="/san-basilio-de-palenque-colombia-2023-03-22-23-59-50-utc.mp4"
          type="video/mp4"
        />
      </video>
    </div>
    <!-- Item 4 -->
    <div id="carousel-item-4" class="hidden duration-1000 ease-in-out">
      <video class="carousel-video w-full" muted preload="auto" playsinline>
        <source
          src="/wonderful-rivers-and-landscapes-of-colombia-5-2022-11-10-00-53-41-utc.mp4"
          type="video/mp4"
        />
      </video>
    </div>
  </div>
  <!-- Slider indicators -->
  <div
    class="absolute bottom-5 left-1/2 z-50 flex -translate-x-1/2 space-x-3 rtl:space-x-reverse"
  >
    <button
      id="carousel-indicator-1"
      type="button"
      class="h-3 w-3 rounded-full"
      aria-current="true"
      aria-label="Slide 1"></button>
    <button
      id="carousel-indicator-2"
      type="button"
      class="h-3 w-3 rounded-full"
      aria-current="false"
      aria-label="Slide 2"></button>
    <button
      id="carousel-indicator-3"
      type="button"
      class="h-3 w-3 rounded-full"
      aria-current="false"
      aria-label="Slide 3"></button>
    <button
      id="carousel-indicator-4"
      type="button"
      class="h-3 w-3 rounded-full"
      aria-current="false"
      aria-label="Slide 4"></button>
  </div>
  <!-- Slider controls -->
  <button
    id="data-carousel-prev"
    type="button"
    class="group absolute left-0 top-0 z-50 flex h-full cursor-pointer items-center justify-center px-4 focus:outline-none"
  >
    <span
      class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white dark:bg-gray-800/30 dark:group-hover:bg-gray-800/60 dark:group-focus:ring-gray-800/70"
    >
      <svg
        class="h-4 w-4 text-white dark:text-gray-800"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M5 1 1 5l4 4"></path>
      </svg>
      <span class="hidden">Previous</span>
    </span>
  </button>
  <button
    id="data-carousel-next"
    type="button"
    class="group absolute right-0 top-0 z-50 flex h-full cursor-pointer items-center justify-center px-4 focus:outline-none"
  >
    <span
      class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white dark:bg-gray-800/30 dark:group-hover:bg-gray-800/60 dark:group-focus:ring-gray-800/70"
    >
      <svg
        class="h-4 w-4 text-white dark:text-gray-800"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m1 9 4-4-4-4"></path>
      </svg>
      <span class="hidden">Next</span>
    </span>
  </button>
</div>

<script>
  import { Carousel } from "flowbite";
  import type {
    CarouselItem,
    CarouselOptions,
    CarouselInterface,
  } from "flowbite";
  import type { InstanceOptions } from "flowbite";

  const TIMER_INTERVAL = 8000;

  const carouselElement = document.getElementById("carousel");

  const items: CarouselItem[] = [
    {
      position: 0,
      el: document.getElementById("carousel-item-1")!,
    },
    {
      position: 1,
      el: document.getElementById("carousel-item-2")!,
    },
    {
      position: 2,
      el: document.getElementById("carousel-item-3")!,
    },
    {
      position: 3,
      el: document.getElementById("carousel-item-4")!,
    },
  ];

  // object options with default values
  const options: CarouselOptions = {
    defaultPosition: 0,
    interval: TIMER_INTERVAL,

    indicators: {
      activeClasses: "bg-white dark:bg-gray-800",
      inactiveClasses:
        "bg-white/50 dark:bg-gray-800/50 hover:bg-white dark:hover:bg-gray-800",
      items: [
        {
          position: 0,
          el: document.getElementById("carousel-indicator-1")!,
        },
        {
          position: 1,
          el: document.getElementById("carousel-indicator-2")!,
        },
        {
          position: 2,
          el: document.getElementById("carousel-indicator-3")!,
        },
        {
          position: 3,
          el: document.getElementById("carousel-indicator-4")!,
        },
      ],
    },

    // callback functions
    onNext: () => {
      //console.log('next slider item is shown');
    },
    onPrev: () => {
      //console.log('previous slider item is shown');
    },
    onChange: () => {
      //console.log('new slider item has been shown');
    },
  };

  // instance options object
  const instanceOptions: InstanceOptions = {
    id: "carousel",
    override: true,
  };

  const carousel: CarouselInterface = new Carousel(
    carouselElement,
    items,
    options,
    instanceOptions,
  );

  carousel.cycle();

  // set event listeners for prev and next buttons
  const $prevButton = document.getElementById("data-carousel-prev");
  const $nextButton = document.getElementById("data-carousel-next");

  if ($prevButton) {
    $prevButton.addEventListener("click", () => {
      carousel.prev();
    });
  }

  if ($nextButton) {
    $nextButton.addEventListener("click", () => {
      carousel.next();
    });
  }

  document.addEventListener("DOMContentLoaded", function () {
    const videos = document.querySelectorAll("video");
    const options = {
      root: null,
      rootMargin: "0px",
      threshold: 0.5,
    };

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach((entry) => {
        const targetVideo: Element = entry.target;
        if (targetVideo instanceof HTMLVideoElement) {
          // Verifica que el target es un HTMLVideoElement
          if (entry.isIntersecting) {
            targetVideo.play();
          } else {
            targetVideo.pause();
          }
        }
      });
    }, options);

    videos.forEach((video) => {
      observer.observe(video);
    });

    // Assuming you have a function to change the carousel items
    function changeCarouselItem(index) {
      const items = document.querySelectorAll(".carousel-item");
      items.forEach((item, idx) => {
        if (idx === index) {
          item.classList.remove("hidden");
          let $itemVideo = item.querySelector("video");
          if ($itemVideo) {
            $itemVideo.play();
          }
        } else {
          item.classList.add("hidden");
          let $itemVideo = item.querySelector("video");
          if ($itemVideo) {
            $itemVideo.pause();
          }
        }
      });
    }

    // Example to move to the next item
    let currentIndex = 0;
    setInterval(() => {
      changeCarouselItem(currentIndex);
      currentIndex = (currentIndex + 1) % videos.length;
    }, TIMER_INTERVAL); // Adjust the interval as needed
  });
</script>
